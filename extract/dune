(coq.extraction
 (prelude Extract)
 (extracted_modules 
  BinNums BinPos Datatypes Specif  List0 String0 Bool0 Common
  base Basics BinInt strings0 countable zmap pmap gmap fin_maps numbers option0
  Byte CoqUtil CoqBigInt LocTy ssrbool path Monads
  extmap extset CoqWstdlib CoqWeakhtbl CoqHashtbl hashcons NumberDefs
  NumberFuncs State CoqCtr
  IntFuncs 
  CoqExthtbl
  ConstantDefs
  IdentDefs
  TyDefs TyFuncs TermDefs TermFuncs DeclDefs DeclFuncs CoercionDefs 
  TheoryDefs)
 (theories Src stdpp Proofs ExtLib mathcomp.ssreflect elpi HB)
 )

;bad hack because we DONT want the autogenerated .mli file
;and the OCaml inferred type has problems with weak references
 ;TODO: can we make polymorphic?
(rule
  (deps CoqExthtbl.ml)
  (targets Exthtbl2.ml)
  (action
    (with-stdout-to Exthtbl2.ml
      (pipe-stdout
        (cat CoqExthtbl.ml)
        (run sed -e "s/let hash_ref =/let hash_ref : t ref =/g")
      )
    )))

;create Loc.ml (only for testing)
 (rule
  (deps LocTy.ml LocExtra.ml)
  (targets loc.ml)
  (action 
  (with-stdout-to loc.ml
    (pipe-stdout
     (cat locpre.ml LocTy.ml LocExtra.ml)
     (run sed -e "s/open LocTy//g")
    )
   )
  )
 )

;create Weakhtbl.ml (only for testing)
(rule
  (deps CoqWeakhtbl.ml Weakhtblextra.ml)
  (targets weakhtbl.ml)
  (action 
  (with-stdout-to weakhtbl.ml
    (pipe-stdout
     (cat CoqWeakhtbl.ml Weakhtblextra.ml)
     (run sed -e "s/open CoqWeakhtbl//g")
    )
   )
  )
 )

;create Wstdlib.ml (only for testing)
(rule
  (deps CoqWstdlib.ml Wstdlibextra.ml)
  (targets wstdlib.ml)
  (action 
  (with-stdout-to wstdlib.ml
    (pipe-stdout
     (cat CoqWstdlib.ml Wstdlibextra.ml)
     (run sed -e "s/open CoqWstdlib//g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
    )
   )
  )
 )

;create Ctr.ml (TODO: need better method for extract + hand-written .mli files)
(rule
  (deps CoqCtr.ml)
  (targets Ctr.ml)
  (action
    (with-stdout-to Ctr.ml
        (cat CoqCtr.ml)
    )))

;create Number.ml
 (rule
  (deps NumberDefs.ml numberexn.ml NumberFuncs.ml numberextra.ml)
  (targets number.ml)
  (action 
  (with-stdout-to number.ml
    (pipe-stdout
     (cat NumberDefs.ml numberexn.ml NumberFuncs.ml numberextra.ml)
     (run sed -e "s/open NumberDefs//g")
    )
   )
  )
 )

;create Ident.ml
 (rule
  (deps IdentDefs.ml IdentExtra.ml)
  (targets ident.ml)
  (action 
  (with-stdout-to ident.ml
    (pipe-stdout
     (cat IdentDefs.ml IdentExtra.ml)
     (run sed -e "s/open IdentDefs//g")
     (run sed -e "s/open LocTy/open Loc/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     (run sed -e "s/open CoqCtr/open Ctr/g")
    )
   )
  )
 )

;Create Ty.ml by concatenation Defs, Exn, Funcs
 (rule
  (deps TyDefs.ml TyExn.ml TyFuncs.ml TyExtra.ml)
  (targets ty.ml)
  (action 
  (with-stdout-to ty.ml
    (pipe-stdout
     (cat TyDefs.ml TyExn.ml TyFuncs.ml TyExtra.ml)
     (run sed -e "s/open TyDefs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     (run sed -e "s/NumberDefs/Number/g")
     (run sed -e "s/CoqExthtbl/Exthtbl2/g")
    )
   )
  )
 )

 ;Create constant.ml
 ;create Ident.ml
 (rule
  (deps ConstantDefs.ml ConstantExtra.ml)
  (targets constant.ml)
  (action 
  (with-stdout-to constant.ml
    (pipe-stdout
     (cat ConstantDefs.ml ConstantExtra.ml)
     (run sed -e "s/NumberDefs/Number/g")
    ;  (run sed -e "s/open LocTy/open Loc/g")
    ;  (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
    ;  (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
    )
   )
  )
 )

 ;Create term.ml
 (rule
  (deps TermDefs.ml TermExn.ml TermFuncs.ml TermExtra.ml)
  (targets term.ml)
  (action 
  (with-stdout-to term.ml
    (pipe-stdout
     (cat TermDefs.ml TermExn.ml TermFuncs.ml TermExtra.ml)
     (run sed -e "s/open TyDefs/open Ty/g")
     (run sed -e "s/open TyFuncs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     (run sed -e "s/NumberDefs/Number/g")
     (run sed -e "s/open NumberFuncs//g") ;bad
     (run sed -e "s/CoqExthtbl/Exthtbl2/g")
     (run sed -e "s/open TermDefs//g")
     (run sed -e "s/ConstantDefs/Constant/g")
     (run sed -e "s/open LocTy/open Loc/g")
    )
   )
  )
 )

 ;Create decl.ml
 (rule
  (deps DeclDefs.ml DeclExn.ml DeclFuncs.ml DeclExtra.ml)
  (targets decl.ml)
  (action 
  (with-stdout-to decl.ml
    (pipe-stdout
     (cat DeclDefs.ml DeclExn.ml DeclFuncs.ml DeclExtra.ml)
     (run sed -e "s/open TyDefs/open Ty/g")
     (run sed -e "s/open TyFuncs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     ;(run sed -e "s/NumberDefs/Number/g")
     ;(run sed -e "s/open NumberFuncs//g") ;bad
     ;(run sed -e "s/CoqExthtbl/Exthtbl2/g")
     (run sed -e "s/open TermDefs/open Term/g")
     (run sed -e "s/open TermFuncs//g") ;bad
     ;(run sed -e "s/ConstantDefs/Constant/g")
     ;(run sed -e "s/open LocTy/open Loc/g")
     (run sed -e "s/open DeclDefs//g")
    )
   )
  )
 )

;Coercion.ml
(rule
  (deps CoercionDefs.ml CoercionExtra.ml)
  (targets coercion.ml)
  (action 
  (with-stdout-to coercion.ml
    (pipe-stdout
     (cat CoercionDefs.ml CoercionExtra.ml)
     (run sed -e "s/open TyDefs/open Ty/g")
     (run sed -e "s/open TyFuncs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     ;(run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     ;(run sed -e "s/NumberDefs/Number/g")
     ;(run sed -e "s/open NumberFuncs//g") ;bad
     ;(run sed -e "s/CoqExthtbl/Exthtbl2/g")
     (run sed -e "s/open TermDefs/open Term/g")
     (run sed -e "s/open TermFuncs//g") ;bad
     ;(run sed -e "s/ConstantDefs/Constant/g")
     ;(run sed -e "s/open LocTy/open Loc/g")
     ;(run sed -e "s/open DeclDefs//g")
    )
   )
  )
 )

;Theory.ml
(rule
  (deps TheoryDefs.ml TheoryExtra.ml)
  (targets theory.ml)
  (action 
  (with-stdout-to theory.ml
    (pipe-stdout
     (cat TheoryDefs.ml TheoryExtra.ml)
     (run sed -e "s/open TyDefs/open Ty/g")
     (run sed -e "s/open TyFuncs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     ;(run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
     ;(run sed -e "s/NumberDefs/Number/g")
     ;(run sed -e "s/open NumberFuncs//g") ;bad
     ;(run sed -e "s/CoqExthtbl/Exthtbl2/g")
     (run sed -e "s/open TermDefs/open Term/g")
     (run sed -e "s/open TermFuncs//g") ;bad
     ;(run sed -e "s/ConstantDefs/Constant/g")
     ;(run sed -e "s/open LocTy/open Loc/g")
     (run sed -e "s/open DeclDefs/open Decl/g")
     (run sed -e "s/open DeclFuncs//g")
     (run sed -e "s/CoercionDefs/Coercion/g")
    )
   )
  )
 )

(library
 (name Why3Coq)
 (modules (:standard \ CoqCtr TyExn TyDefs TyFuncs TyExtra IdentDefs IdentExtra 
  LocTy LocExtra Locpre CoqWstdlib Wstdlibextra CoqWeakhtbl Weakhtblextra
  NumberDefs numberexn NumberFuncs numberextra CoqExthtbl ConstantDefs 
  ConstantExtra TermDefs TermExtra TermExn TermFuncs DeclDefs 
  DeclExn DeclFuncs DeclExtra CoercionDefs CoercionExtra TheoryDefs TheoryExtra))
 (flags (:standard -w -33 -w -32 -w -9 -w -27 -w -34)) 
 ;32 is unused value - extraction results in values we don't want in mli file
 ;27 is unused var strict - TODO turn off after
 ;34 is unused type declaration - TODO remove, need for hack in decl
 (libraries zarith sexplib re))



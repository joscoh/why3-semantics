(coq.extraction
 (prelude Extract)
 (extracted_modules 
  BinNums BinPos Datatypes Specif  List0 String0
  base Basics BinInt zmap pmap fin_maps numbers option0 decidable
  ErrorMonad CoqUtil CoqBigInt LocTy StateMonad
  Extmap Extset CoqWstdlib CoqWeakhtbl CoqHashtbl Hashcons CoqNumber Ctr
  IntFuncs 
  IdentDefs
  TyDefs TyFuncs)
 (theories Src stdpp Proofs ExtLib)
 )

;create Loc.ml (only for testing)
 (rule
  (deps LocTy.ml LocExtra.ml)
  (targets loc.ml)
  (action 
  (with-stdout-to loc.ml
    (pipe-stdout
     (cat locpre.ml LocTy.ml LocExtra.ml)
     (run sed -e "s/open LocTy//g")
    )
   )
  )
 )

;create Weakhtbl.ml (only for testing)
(rule
  (deps CoqWeakhtbl.ml Weakhtblextra.ml)
  (targets weakhtbl.ml)
  (action 
  (with-stdout-to weakhtbl.ml
    (pipe-stdout
     (cat CoqWeakhtbl.ml Weakhtblextra.ml)
     (run sed -e "s/open CoqWeakhtbl//g")
    )
   )
  )
 )

;create Wstdlib.ml (only for testing)
(rule
  (deps CoqWstdlib.ml Wstdlibextra.ml)
  (targets wstdlib.ml)
  (action 
  (with-stdout-to wstdlib.ml
    (pipe-stdout
     (cat CoqWstdlib.ml Wstdlibextra.ml)
     (run sed -e "s/open CoqWstdlib//g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
    )
   )
  )
 )

;create Ident.ml
 (rule
  (deps IdentDefs.ml IdentExtra.ml)
  (targets Ident.ml)
  (action 
  (with-stdout-to Ident.ml
    (pipe-stdout
     (cat IdentDefs.ml IdentExtra.ml)
     (run sed -e "s/open IdentDefs//g")
     (run sed -e "s/open LocTy/open Loc/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
    )
   )
  )
 )

;Create Ty.ml by concatenation Defs, Exn, Funcs
 (rule
  (deps TyDefs.ml TyExn.ml TyFuncs.ml TyExtra.ml)
  (targets Ty.ml)
  (action 
  (with-stdout-to Ty.ml
    (pipe-stdout
     (cat TyDefs.ml TyExn.ml TyFuncs.ml TyExtra.ml)
     (run sed -e "s/open TyDefs//g")
     (run sed -e "s/open IdentDefs/open Ident/g")
     (run sed -e "s/open CoqWstdlib/open Wstdlib/g")
     (run sed -e "s/open CoqWeakhtbl/open Weakhtbl/g")
    )
   )
  )
 )

(library
 (name Why3Coq)
 (modules (:standard \ TyExn TyDefs TyFuncs TyExtra IdentDefs IdentExtra 
  LocTy LocExtra Locpre CoqWstdlib Wstdlibextra CoqWeakhtbl Weakhtblextra))
 (flags (:standard -w -33 -w -32)) ;32 is unused value - extraction results in values we don't want in mli file
 (libraries zarith sexplib re))


